on:
  push:
    branches:
      - main
      - development
  pull_request:
    types: [opened, synchronize, reopened]

name: Build backend with web frontend
jobs:
  backend-tests:
    name: Backend tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - uses: actions/checkout@v3
      - name: Test
        run: cargo test --release

  docker-build:
    name: Build backend with web frontend as docker image and push to docker hub
    runs-on: ubuntu-latest
    steps:
      - name: Code Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to docker hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      - name: Build the image
        run: |
          docker buildx build --push \
            --tag nicolaspernoud/atrium:"$([[ ${GITHUB_REF##*/} = main ]] && echo "latest" || echo "${GITHUB_REF##*/}")" \
            --platform linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64 \
            .

  app-build:
    name: Build frontend Android app
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Export Release Timestamp
        run: echo "APP_VERSION=$(date +'%Y-%m-%d_%H-%m-%S')" >> $GITHUB_ENV
      - name: Set up Java
        uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: "3.10.2"
      - name: Decode android/key.jks
        run: echo "${{ secrets.KEY_JKS }}" | base64 --decode > android/key.jks
      - name: Decode android/key.properties
        run: echo "${{ secrets.KEY_PROPERTIES }}" | base64 --decode > android/key.properties
      - name: Install pub Dependencies
        run: flutter pub get
      # - name: Run Tests
      #   run: flutter test
      - name: Build Android App
        run: flutter build apk --split-per-abi
      - name: Release Apps
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.APP_VERSION }}
          name: ${{ env.APP_VERSION }}
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: "frontend/build/app/outputs/flutter-apk/*.apk"
      - name: Delete old releases
        uses: dev-drprasad/delete-older-releases@v0.2.0
        with:
          keep_latest: 1
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
